{"version":3,"sources":["logo.svg","algorithms/bubbleSort.js","algorithms/insertionSort.js","algorithms/selectionSort.js","algorithms/quickSort.js","algorithms/mergeSort.js","components/Navbar.jsx","components/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["bubbleSort","temp","array","setArray","setColorChangeIndex","len","length","auxArray","arrays","indexes","i","j","push","index","setTimeout","insertionSort","key","selectionSort","min_idx","quickSort","quickSortRecursive","arr","start","end","pivotValue","pivotIndex","partition","mergeSort","mergeSortRecursive","Navbar","useState","sliderValue","setsliderValue","generateArray","Array","from","Math","floor","random","className","onClick","type","min","id","max","value","onChange","evt","target","parseInt","console","log","Main","colorChangeIndex","isthis","idx","map","style","display","backgroundColor","height","number","apply","width","marginLeft","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ef51988.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const bubbleSort = ({ array, setArray, setColorChangeIndex }) => {\r\n  const len = array.length;\r\n  let temp;\r\n  let auxArray = [...array];\r\n//   console.log(\"orignal array\",auxArray);\r\n  let arrays = [];\r\n  let indexes = [];\r\n  for (let i = 0; i < len-1; i++) {\r\n    for (let j = 0; j < len-i-1; j++) {\r\n      if (auxArray[j] > auxArray[j+1]) {\r\n        temp = auxArray[j];\r\n        auxArray[j] = auxArray[j+1];\r\n        auxArray[j+1] = temp;\r\n        arrays.push([...auxArray]);\r\n        indexes.push([j,j+1]);\r\n      }\r\n    }\r\n  }\r\n  for (let index = 0; index < arrays.length; index++) {\r\n    setTimeout(() => {\r\n      setArray(arrays[index]);\r\n      setColorChangeIndex([...indexes[index]])\r\n    }, (index * 700)/(len));\r\n  }\r\n  setTimeout(() => {\r\n    setColorChangeIndex([])\r\n  }, (arrays.length * 700)/(len));\r\n  \r\n\r\n  return arrays;\r\n};\r\nexport default bubbleSort;\r\n","const insertionSort = ({ array, setArray, setColorChangeIndex }) => {\r\n    \r\n    const len = array.length;\r\n    let temp;\r\n    let auxArray = [...array];\r\n  //   console.log(\"orignal array\",auxArray);\r\n    let arrays = [];\r\n    let indexes = [];\r\n    \r\n    let i, key, j; \r\n    for (i = 1; i < len; i++)\r\n    { \r\n        key = auxArray[i]; \r\n        j = i - 1; \r\n        while (j >= 0 && auxArray[j] > key)\r\n        { \r\n            auxArray[j + 1] = auxArray[j]; \r\n            j = j - 1; \r\n            arrays.push([...auxArray]); \r\n            indexes.push([j,j+1]);\r\n        } \r\n        auxArray[j + 1] = key; \r\n        arrays.push([...auxArray]); \r\n        indexes.push([j,j+1]);\r\n    } \r\n    for (let index = 0; index < arrays.length; index++) {\r\n      setTimeout(() => {\r\n        setArray(arrays[index]);\r\n        setColorChangeIndex([...indexes[index]])\r\n      }, (index * 700)/(len));\r\n    }\r\n    setTimeout(() => {\r\n      setColorChangeIndex([])\r\n    }, (arrays.length * 700)/(len));\r\n    \r\n  \r\n    return arrays;\r\n  };\r\n  export default insertionSort;\r\n  ","const selectionSort = ({ array, setArray, setColorChangeIndex }) => {\r\n    \r\n    const len = array.length;\r\n    let temp;\r\n    let auxArray = [...array];\r\n  //   console.log(\"orignal array\",auxArray);\r\n    let arrays = [];\r\n    let indexes = [];\r\n    \r\n    var i, j, min_idx;\r\n    for (i = 0; i < len-1; i++)\r\n    {\r\n        min_idx = i;\r\n        for (j = i + 1; j < len; j++){\r\n            if (auxArray[j] < auxArray[min_idx])\r\n                min_idx = j;\r\n        }\r\n        temp = auxArray[min_idx];\r\n        auxArray[min_idx] = auxArray[i];\r\n        auxArray[i] = temp;\r\n        arrays.push([...auxArray]); \r\n        indexes.push([i,min_idx]);\r\n    }\r\n    for (let index = 0; index < arrays.length; index++) {\r\n      setTimeout(() => {\r\n        setArray(arrays[index]);\r\n        setColorChangeIndex([...indexes[index]])\r\n      }, (index * 2000)/(len));\r\n    }\r\n    setTimeout(() => {\r\n      setColorChangeIndex([])\r\n    }, (arrays.length * 2000)/(len));\r\n    \r\n  \r\n    return arrays;\r\n  };\r\n  export default selectionSort;\r\n  ","const quickSort = ({ array, setArray, setColorChangeIndex }) => {\r\n    const len = array.length;\r\n    let auxArray = [...array];\r\n  //   console.log(\"orignal array\",auxArray);\r\n    let arrays = [];\r\n    let indexes = [];\r\n    // for (let i = 0; i < len-1; i++) {\r\n    //   for (let j = 0; j < len-i-1; j++) {\r\n    //     if (auxArray[j] > auxArray[j+1]) {\r\n    //       temp = auxArray[j];\r\n    //       auxArray[j] = auxArray[j+1];\r\n    //       auxArray[j+1] = temp;\r\n        //   arrays.push([...auxArray]);\r\n        //   indexes.push([j,j+1]);\r\n    //     }\r\n    //   }\r\n    // }\r\n    function partition(arr, start, end){\r\n        // Taking the last element as the pivot\r\n        const pivotValue = arr[end];\r\n        let pivotIndex = start; \r\n        for (let i = start; i < end; i++) {\r\n            if (arr[i] < pivotValue) {\r\n            // Swapping elements\r\n            [arr[i], arr[pivotIndex]] = [arr[pivotIndex], arr[i]];\r\n            // Moving to next element\r\n            arrays.push([...arr]);\r\n            indexes.push([i,pivotIndex]);\r\n            pivotIndex++;\r\n            }\r\n        }\r\n        [arr[pivotIndex], arr[end]] = [arr[end], arr[pivotIndex]] \r\n        arrays.push([...arr]);\r\n        indexes.push([end,pivotIndex]);\r\n        return pivotIndex;\r\n    }\r\n\r\n    function quickSortRecursive(arr, start, end) {\r\n        // Base case or terminating case\r\n        if (start >= end) {\r\n            return;\r\n        }\r\n        let index = partition(arr, start, end);\r\n        // Recursively apply the same logic to the left and right subarrays\r\n        quickSortRecursive(arr, start, index - 1);\r\n        quickSortRecursive(arr, index + 1, end);\r\n    }\r\n\r\n    quickSortRecursive(auxArray, 0, len-1);\r\n    for (let index = 0; index < arrays.length; index++) {\r\n      setTimeout(() => {\r\n        setArray(arrays[index]);\r\n        setColorChangeIndex([...indexes[index]])\r\n      }, (index * 3000)/(len));\r\n    }\r\n    setTimeout(() => {\r\n      setColorChangeIndex([])\r\n    }, (arrays.length * 3000)/(len));\r\n    return arrays;\r\n};\r\nexport default quickSort;\r\n  \r\n\r\n","const mergeSort = ({ array, setArray, setColorChangeIndex }) => {\r\n    const len = array.length;\r\n    let auxArray = [...array];\r\n  //   console.log(\"orignal array\",auxArray);\r\n    let arrays = [];\r\n    let indexes = [];\r\n    function partition(arr, start, end){\r\n        // Taking the last element as the pivot\r\n        const pivotValue = arr[end];\r\n        let pivotIndex = start; \r\n        for (let i = start; i < end; i++) {\r\n            if (arr[i] < pivotValue) {\r\n            // Swapping elements\r\n            [arr[i], arr[pivotIndex]] = [arr[pivotIndex], arr[i]];\r\n            // Moving to next element\r\n            arrays.push([...arr]);\r\n            indexes.push([i,pivotIndex]);\r\n            pivotIndex++;\r\n            }\r\n        }\r\n        [arr[pivotIndex], arr[end]] = [arr[end], arr[pivotIndex]] \r\n        arrays.push([...arr]);\r\n        indexes.push([end,pivotIndex]);\r\n        return pivotIndex;\r\n    }\r\n\r\n    function mergeSortRecursive(arr, start, end) {\r\n        // Base case or terminating case\r\n        if (start >= end) {\r\n            return;\r\n        }\r\n        let index = partition(arr, start, end);\r\n        // Recursively apply the same logic to the left and right subarrays\r\n        mergeSortRecursive(arr, start, index - 1);\r\n        mergeSortRecursive(arr, index + 1, end);\r\n    }\r\n\r\n    mergeSortRecursive(auxArray, 0, len-1);\r\n    for (let index = 0; index < arrays.length; index++) {\r\n      setTimeout(() => {\r\n        setArray(arrays[index]);\r\n        setColorChangeIndex([...indexes[index]])\r\n      }, (index * 700)/(len));\r\n    }\r\n    setTimeout(() => {\r\n      setColorChangeIndex([])\r\n    }, (arrays.length * 700)/(len));\r\n    return arrays;\r\n};\r\nexport default mergeSort;\r\n  \r\n","import React, { Component, useState } from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nimport bubbleSort from \"../algorithms/bubbleSort\";\r\nimport insertionSort from \"../algorithms/insertionSort\";\r\nimport selectionSort from \"../algorithms/selectionSort\";\r\nimport quickSort from \"../algorithms/quickSort\";\r\nimport mergeSort from \"../algorithms/mergeSort\";\r\n\r\n//algorithms\r\nconst Navbar = ({ array, setArray, setColorChangeIndex }) => {\r\n  const [sliderValue, setsliderValue] = useState(50);\r\n  const handleChange = (evt) => {\r\n    setsliderValue(evt.target.value);\r\n    setArray(\r\n      generateArray(Math.floor((parseInt(evt.target.value) + 3) * 1.25))\r\n    );\r\n  };\r\n\r\n  const generateArray = (len) => {\r\n    return Array.from({ length: len }, () => Math.floor(Math.random() * len));\r\n  };\r\n\r\n  const generateNewArray = () => {\r\n    setArray(generateArray(Math.floor((parseInt(sliderValue) + 3) * 1.25)));\r\n    console.log(array);\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      \r\n      \r\n      \r\n      <button\r\n        className=\"glow-on-hover\"\r\n        onClick={() => {\r\n          quickSort({ array, setArray, setColorChangeIndex });\r\n        }}\r\n      >\r\n        Quick Sort\r\n      </button>\r\n      <button\r\n        className=\"glow-on-hover\"\r\n        onClick={() => {\r\n          insertionSort({ array, setArray, setColorChangeIndex });\r\n        }}\r\n      >\r\n        Insertion Sort\r\n      </button>\r\n      <button\r\n        className=\"glow-on-hover\"\r\n        onClick={() => {\r\n          bubbleSort({ array, setArray, setColorChangeIndex });\r\n        }}\r\n      >\r\n        Bubble Sort\r\n      </button>\r\n      <button\r\n        className=\"glow-on-hover\"\r\n        onClick={() => {\r\n          mergeSort({ array, setArray, setColorChangeIndex });\r\n        }}\r\n      >\r\n        Merge Sort\r\n      </button>\r\n      <button\r\n        className=\"glow-on-hover\"\r\n        onClick={() => {\r\n          selectionSort({ array, setArray, setColorChangeIndex });\r\n        }}\r\n      >\r\n        Selection Sort\r\n      </button>\r\n      <div className=\"slidecontainer\">\r\n        <input\r\n          type=\"range\"\r\n          min=\"1\"\r\n          id=\"changeSize\"\r\n          max=\"100\"\r\n          value={sliderValue}\r\n          className=\"slider\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <button className=\"glow-on-hover\" onClick={generateNewArray}>Generate New Array </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Component, useState } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nimport \"./Main.css\";\r\n\r\n\r\n// class Main extends Component {\r\n//   constructor(props){\r\n//     super(props);\r\n//   }\r\nconst Main = () => {\r\n  const getHeight = (number) => {\r\n    const height = Math.floor((number / Math.max.apply(Math, array)) * 500);\r\n    return height;\r\n  };\r\n\r\n  const [colorChangeIndex,setColorChangeIndex] = useState([]);\r\n\r\n  const [array, setArray] = useState([\r\n    344, 5234, 534, 4234, 345, 345, 234, 24, 324, 534, 3444, 35, 423, 24, 23,\r\n    123, 13,\r\n  ]);\r\n\r\n\r\n  const isthis = (idx) =>{\r\n    if ( (colorChangeIndex.length===2) && (idx===colorChangeIndex[0] || idx===colorChangeIndex[1])){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar array={array} setArray={setArray} setColorChangeIndex={setColorChangeIndex}/>\r\n      <div className=\"ArrayContainer\" id=\"myDiv\">\r\n        {array.map((value, idx) => (\r\n          // height: `${getHeight(value)}px`,\r\n          // divStyle.height = `${getHeight(value)}px`;\r\n          <div\r\n            className=\"array-bar\"\r\n            key={idx}\r\n            style={{\r\n              display: \"inline-block\",\r\n              // backgroundColor: \"red\",\r\n              backgroundColor: `${ isthis(idx)?\"teal\":\"darkblue\" }`,\r\n              height: `${getHeight(value)}px`,\r\n              width: `${Math.floor(600 / array.length)}px`,\r\n              marginLeft: `${Math.floor(600 / array.length) * 0.5}px`\r\n            }}\r\n          >\r\n            {/* etrfx */}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n\r\n// export default class Main extends Component{\r\n\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state = {\r\n//             array : [6,5,4,3,2,1],\r\n//         };\r\n//     }\r\n\r\n//     render(){\r\n//         return(\r\n//             < Navbar arr />\r\n//         );\r\n//     }\r\n// }\r\n","import logo from './logo.svg';\nimport './App.css';\n\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}